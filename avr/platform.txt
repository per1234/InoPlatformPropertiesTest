# The purpose of this file is to demonstrate which properties are defined in each recipe and also where the hook recipes are called
# The dummy recipe.preproc.macros causes compilation to fail on IDE versions previous to 1.9.0-beta so the stock recipe must be used for those versions
# The output can be cleaned by doing a replace of:
# GNU size (GNU Binutils) 2.26.20160125\n\nCopyright (C) 2015 Free Software Foundation, Inc.\n\nThis program is free software; you may redistribute it under the terms of\n\nthe GNU General Public License version 3 or (at your option) any later version.\n\nThis program has absolutely no warranty.\n\n

# For more info:
# https://github.com/arduino/Arduino/wiki/Arduino-IDE-1.5-3rd-party-Hardware-specification

name=Platform Properties Test
version=0.0.0

# AVR compile variables
# ---------------------

compiler.warning_flags=-w
compiler.warning_flags.none=-w
compiler.warning_flags.default=
compiler.warning_flags.more=-Wall
compiler.warning_flags.all=-Wall -Wextra

# Default "compiler.path" is correct, change only if you want to override the initial value
compiler.path={runtime.tools.avr-gcc.path}/bin/
compiler.c.cmd=avr-gcc
compiler.c.flags=-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects
compiler.c.elf.flags={compiler.warning_flags} -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections
compiler.c.elf.cmd=avr-gcc
compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD
compiler.cpp.cmd=avr-g++
compiler.cpp.flags=-c -g -Os {compiler.warning_flags} -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD -flto
compiler.ar.cmd=avr-gcc-ar
compiler.ar.flags=rcs
compiler.objcopy.cmd=avr-objcopy
compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0
compiler.elf2hex.flags=-O ihex -R .eeprom
compiler.elf2hex.cmd=avr-objcopy
compiler.ldflags=
compiler.size.cmd=avr-size

# This can be overridden in boards.txt
build.extra_flags=

# These can be overridden in platform.local.txt
compiler.c.extra_flags=
compiler.c.elf.extra_flags=
compiler.S.extra_flags=
compiler.cpp.extra_flags=
compiler.ar.extra_flags=
compiler.objcopy.eep.extra_flags=
compiler.elf2hex.extra_flags=

# AVR compile patterns
# --------------------

recipe.hooks.sketch.prebuild.1.pattern    ={compiler.size.cmd} recipe=recipe.hooks.sketch.prebuild.1.pattern     runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path} {build.path}/sketch/{build.project_name}.cpp
recipe.hooks.sketch.postbuild.1.pattern   ={compiler.size.cmd} recipe=recipe.hooks.sketch.postbuild.1.pattern    runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.libraries.prebuild.1.pattern ={compiler.size.cmd} recipe=recipe.hooks.libraries.prebuild.1.pattern  runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.libraries.postbuild.1.pattern={compiler.size.cmd} recipe=recipe.hooks.libraries.postbuild.1.pattern runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.core.prebuild.1.pattern      ={compiler.size.cmd} recipe=recipe.hooks.core.prebuild.1.pattern       runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.core.postbuild.1.pattern     ={compiler.size.cmd} recipe=recipe.hooks.core.postbuild.1.pattern      runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.linking.prelink.1.pattern    ={compiler.size.cmd} recipe=recipe.hooks.linking.prelink.1.pattern     runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.linking.postlink.1.pattern   ={compiler.size.cmd} recipe=recipe.hooks.linking.postlink.1.pattern    runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.objcopy.preobjcopy.1.pattern ={compiler.size.cmd} recipe=recipe.hooks.objcopy.preobjcopy.1.pattern  runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.objcopy.postobjcopy.1.pattern={compiler.size.cmd} recipe=recipe.hooks.objcopy.postobjcopy.1.pattern runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.savehex.presavehex.1.pattern ={compiler.size.cmd} recipe=recipe.hooks.objcopy.postobjcopy.1.pattern runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.hooks.savehex.postsavehex.1.pattern={compiler.size.cmd} recipe=recipe.hooks.objcopy.postobjcopy.1.pattern runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.c.o.pattern                        ={compiler.size.cmd} recipe=recipe.c.o.pattern                         runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.cpp.o.pattern                      ={compiler.size.cmd} recipe=recipe.cpp.o.pattern                       runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.S.o.pattern                        ={compiler.size.cmd} recipe=recipe.S.o.pattern                         runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.ar.pattern                         ={compiler.size.cmd} recipe=recipe.ar.pattern                          runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.c.combine.pattern                  ={compiler.size.cmd} recipe=recipe.c.combine.pattern                   runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.objcopy.eep.pattern                ={compiler.size.cmd} recipe=recipe.objcopy.eep.pattern                 runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.objcopy.hex.pattern                ={compiler.size.cmd} recipe=recipe.objcopy.hex.pattern                 runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.size.pattern                       ={compiler.size.cmd} recipe=recipe.size.pattern                        runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
recipe.preproc.includes                   ={compiler.size.cmd} recipe=recipe.preproc.includes                    runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}
#recipe.preproc.macros                    ={compiler.size.cmd} recipe=recipe.preproc.macros                      runtime.platform.path={runtime.platform.path} runtime.hardware.path={runtime.hardware.path} runtime.ide.path={runtime.ide.path} runtime.ide.version={runtime.ide.version} ide_version={ide_version} runtime.os={runtime.os} build.path={build.path} build.project_name={build.project_name} build.arch={build.arch} includes={includes} source_file={source_file} object_file={object_file} archive_file_path={archive_file_path} archive_file={archive_file} object_files={object_files} preprocessed_file_path={preprocessed_file_path}

# The dummy recipe.preproc.macros above causes compilation to fail on IDE versions previous to 1.9.0-beta so the stock recipe below must be used for those versions
recipe.preproc.macros="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{preprocessed_file_path}"



recipe.output.tmp_file={build.project_name}.hex
recipe.output.save_file={build.project_name}.{build.variant}.hex

recipe.size.regex=^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*
recipe.size.regex.data=^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*
recipe.size.regex.eeprom=^(?:\.eeprom)\s+([0-9]+).*

## Preprocessor
preproc.includes.flags=-w -x c++ -M -MG -MP



preproc.macros.flags=-w -x c++ -E -CC

# AVR Uploader/Programmers tools
# ------------------------------

tools.avrdude.path={runtime.tools.avrdude.path}
tools.avrdude.cmd.path={path}/bin/avrdude
tools.avrdude.config.path={path}/etc/avrdude.conf

tools.avrdude.network_cmd={runtime.tools.arduinoOTA.path}/bin/arduinoOTA

tools.avrdude.upload.params.verbose=-v
tools.avrdude.upload.params.quiet=-q -q
# tools.avrdude.upload.verify is needed for backwards compatibility with IDE 1.6.8 or older, IDE 1.6.9 or newer overrides this value
tools.avrdude.upload.verify=
tools.avrdude.upload.params.noverify=-V
tools.avrdude.upload.pattern="{cmd.path}" "-C{config.path}" {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} "-P{serial.port}" -b{upload.speed} -D "-Uflash:w:{build.path}/{build.project_name}.hex:i"

tools.avrdude.program.params.verbose=-v
tools.avrdude.program.params.quiet=-q -q
# tools.avrdude.program.verify is needed for backwards compatibility with IDE 1.6.8 or older, IDE 1.6.9 or newer overrides this value
tools.avrdude.program.verify=
tools.avrdude.program.params.noverify=-V
tools.avrdude.program.pattern="{cmd.path}" "-C{config.path}" {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} "-Uflash:w:{build.path}/{build.project_name}.hex:i"

tools.avrdude.erase.params.verbose=-v
tools.avrdude.erase.params.quiet=-q -q
tools.avrdude.erase.pattern="{cmd.path}" "-C{config.path}" {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m

tools.avrdude.bootloader.params.verbose=-v
tools.avrdude.bootloader.params.quiet=-q -q
tools.avrdude.bootloader.pattern="{cmd.path}" "-C{config.path}" {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} "-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i" -Ulock:w:{bootloader.lock_bits}:m

tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}

tools.avrdude.upload.network_pattern="{network_cmd}" -address {serial.port} -port {upload.network.port} -sketch "{build.path}/{build.project_name}.hex" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}

# USB Default Flags
# Default blank usb manufacturer will be filled in at compile time
# - from numeric vendor ID, set to Unknown otherwise
build.usb_manufacturer="Unknown"
build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'
